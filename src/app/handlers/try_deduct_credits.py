"""
–ú–æ–¥—É–ª—å –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∫—Ä–µ–¥–∏—Ç–∞–º–∏ –∏ –¥–µ–∞–∫—Ç–∏–≤–∞—Ü–∏–µ–π –≥—Ä—É–ø–ø.

–°–æ–¥–µ—Ä–∂–∏—Ç —Ñ—É–Ω–∫—Ü–∏–∏ –¥–ª—è:
- –°–ø–∏—Å–∞–Ω–∏—è –∫—Ä–µ–¥–∏—Ç–æ–≤ —Å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤ –≥—Ä—É–ø–ø
- –î–µ–∞–∫—Ç–∏–≤–∞—Ü–∏–∏ –º–æ–¥–µ—Ä–∞—Ü–∏–∏ –ø—Ä–∏ –Ω–µ–¥–æ—Å—Ç–∞—Ç–∫–µ –∫—Ä–µ–¥–∏—Ç–æ–≤
- –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤ –æ –¥–µ–∞–∫—Ç–∏–≤–∞—Ü–∏–∏
- –ü–æ–∏—Å–∫–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤ —Å –º–∏–Ω–∏–º–∞–ª—å–Ω—ã–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ–º –∫—Ä–µ–¥–∏—Ç–æ–≤
"""

import logging
from typing import Optional, Sequence, Tuple, Union

from aiogram.types import ChatMember, ChatMemberAdministrator, ChatMemberOwner

from ..common.bot import bot
from ..common.mp import mp
from ..common.tracking import track_credits_deduction
from ..database import deduct_credits_from_admins, get_admin, set_group_moderation

logger = logging.getLogger(__name__)


async def try_deduct_credits(chat_id: int, amount: int, reason: str) -> bool:
    """
    –ü–æ–ø—ã—Ç–∫–∞ —Å–ø–∏—Å–∞—Ç—å –∑–≤–µ–∑–¥—ã —É –∞–¥–º–∏–Ω–æ–≤. –ü—Ä–∏ –Ω–µ—É–¥–∞—á–µ –æ—Ç–∫–ª—é—á–∞–µ—Ç –º–æ–¥–µ—Ä–∞—Ü–∏—é.

    Args:
        chat_id: ID —á–∞—Ç–∞
        amount: –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–ø–∏—Å—ã–≤–∞–µ–º—ã—Ö –∑–≤–µ–∑–¥
        reason: –ü—Ä–∏—á–∏–Ω–∞ —Å–ø–∏—Å–∞–Ω–∏—è

    Returns:
        bool: True –µ—Å–ª–∏ —Å–ø–∏—Å–∞–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ, False –∏–Ω–∞—á–µ
    """
    if amount == 0:
        return True

    admin_id = await deduct_credits_from_admins(chat_id, amount)
    await track_credits_deduction(chat_id, amount, reason, admin_id)

    if not admin_id:
        logger.warning(f"No paying admins in chat {chat_id} for {reason}")
        await handle_deactivation(chat_id)
        return False

    return True


async def handle_deactivation(chat_id: int) -> None:
    """
    –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –¥–µ–∞–∫—Ç–∏–≤–∞—Ü–∏—é –≥—Ä—É–ø–ø—ã.

    Args:
        chat_id: ID —á–∞—Ç–∞
    """
    await set_group_moderation(chat_id, False)
    chat = await bot.get_chat(chat_id)
    if not chat.title:
        logger.warning(f"Failed to get chat title for {chat_id}")
        return

    admins = await bot.get_chat_administrators(chat_id)
    min_credits_admin, min_credits = await find_min_credits_admin(admins)

    if min_credits_admin:
        bot_info = await bot.me()
        ref_link = f"https://t.me/{bot_info.username}?start={min_credits_admin.user.id}"

        await send_group_deactivation_message(
            chat_id, ref_link, min_credits_admin, min_credits
        )
        await notify_admins_about_deactivation(admins, chat.title, ref_link)


async def find_min_credits_admin(
    admins: Sequence[ChatMember],
) -> Tuple[Optional[Union[ChatMemberAdministrator, ChatMemberOwner]], float]:
    """
    –ù–∞—Ö–æ–¥–∏—Ç –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ —Å –Ω–∞–∏–º–µ–Ω—å—à–∏–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ–º –∑–≤–µ–∑–¥.

    Args:
        admins: –°–ø–∏—Å–æ–∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤

    Returns:
        Tuple[Optional[Union[ChatMemberAdministrator, ChatMemberOwner]], float]:
            –ê–¥–º–∏–Ω —Å –º–∏–Ω–∏–º–∞–ª—å–Ω—ã–º –±–∞–ª–∞–Ω—Å–æ–º –∏ –µ–≥–æ –±–∞–ª–∞–Ω—Å
    """
    min_credits_admin = None
    min_credits = float("inf")

    for admin in admins:
        if not isinstance(admin, (ChatMemberAdministrator, ChatMemberOwner)):
            continue
        if admin.user.is_bot:
            continue
        admin_data = await get_admin(admin.user.id)
        if admin_data and admin_data.credits < min_credits:
            min_credits = admin_data.credits
            min_credits_admin = admin

    return min_credits_admin, min_credits


async def send_group_deactivation_message(
    chat_id: int,
    ref_link: str,
    min_credits_admin: Union[ChatMemberAdministrator, ChatMemberOwner],
    min_credits: float,
) -> None:
    """
    –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –¥–µ–∞–∫—Ç–∏–≤–∞—Ü–∏–∏ –≤ –≥—Ä—É–ø–ø—É.

    Args:
        chat_id: ID —á–∞—Ç–∞
        ref_link: –†–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è —Å—Å—ã–ª–∫–∞
        min_credits_admin: –ê–¥–º–∏–Ω —Å –º–∏–Ω–∏–º–∞–ª—å–Ω—ã–º –±–∞–ª–∞–Ω—Å–æ–º
        min_credits: –ú–∏–Ω–∏–º–∞–ª—å–Ω—ã–π –±–∞–ª–∞–Ω—Å
    """
    try:
        await bot.send_message(
            chat_id,
            "‚ö†Ô∏è *–í–Ω–∏–º–∞–Ω–∏–µ! –ó–∞—â–∏—Ç–∞ –≥—Ä—É–ø–ø—ã –¥–µ–∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω–∞*\n\n"
            "–ù–µ–π—Ä–æ–º–æ–¥–µ—Ä–∞—Ç–æ—Ä –ø—Ä–∏–æ—Å—Ç–∞–Ω–æ–≤–∏–ª —Ä–∞–±–æ—Ç—É –∏–∑-–∑–∞ –Ω–µ—Ö–≤–∞—Ç–∫–∏ –∑–≤–µ–∑–¥.\n"
            "–ì—Ä—É–ø–ø–∞ –æ—Å—Ç–∞–ª–∞—Å—å –±–µ–∑ –∑–∞—â–∏—Ç—ã –æ—Ç:\n"
            "‚Ä¢ –°–ø–∞–º–∞ –∏ —Ä–µ–∫–ª–∞–º—ã\n"
            "‚Ä¢ –ú–æ—à–µ–Ω–Ω–∏–∫–æ–≤\n"
            "‚Ä¢ –ù–µ–∂–µ–ª–∞—Ç–µ–ª—å–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π\n\n"
            "üëâ –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—ã –º–æ–≥—É—Ç –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∑–∞—â–∏—Ç—É —á–µ—Ä–µ–∑ –ª–∏—á–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è —Å –±–æ—Ç–æ–º\n\n"
            f"ü§ñ [–•–æ—Ç–∏—Ç–µ —Ç–∞–∫–æ–≥–æ –∂–µ –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–∞ –≤ —Å–≤–æ—é –≥—Ä—É–ø–ø—É? –ü–æ–¥–∫–ª—é—á–∏—Ç—å]({ref_link})\n"
            "üì¢ [–°–ª–µ–¥–∏—Ç–µ –∑–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è–º–∏ –≤ –∫–∞–Ω–∞–ª–µ –ø—Ä–æ–µ–∫—Ç–∞](https://t.me/ai_antispam)",
            parse_mode="markdown",
            disable_web_page_preview=True,
        )

        # –¢—Ä–µ–∫–∏–Ω–≥ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ä–µ–∫–ª–∞–º–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è
        mp.track(
            min_credits_admin.user.id,
            "promo_message_sent",
            {
                "type": "no_credits_group",
                "chat_id": chat_id,
                "admin_credits": min_credits,
            },
        )
    except Exception as e:
        logger.warning(f"Failed to send group promo message: {e}")


async def notify_admins_about_deactivation(
    admins: Sequence[ChatMember], chat_title: str, ref_link: str
) -> None:
    """
    –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞–º –æ –¥–µ–∞–∫—Ç–∏–≤–∞—Ü–∏–∏.

    Args:
        admins: –°–ø–∏—Å–æ–∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤
        chat_title: –ù–∞–∑–≤–∞–Ω–∏–µ —á–∞—Ç–∞
        ref_link: –†–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è —Å—Å—ã–ª–∫–∞
    """
    for admin in admins:
        if not isinstance(admin, (ChatMemberAdministrator, ChatMemberOwner)):
            continue
        if admin.user.is_bot:
            continue
        try:
            await bot.send_message(
                admin.user.id,
                "–í–Ω–∏–º–∞–Ω–∏–µ, –æ—Ä–≥–∞–Ω–∏—á–µ—Å–∫–∞—è —Ñ–æ—Ä–º–∞ –∂–∏–∑–Ω–∏!\n\n"
                f'–ú–æ—è –∑–∞—â–∏—Ç–∞ –≥—Ä—É–ø–ø—ã "{chat_title}" –≤—Ä–µ–º–µ–Ω–Ω–æ –ø—Ä–∏–æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞ '
                "–∏–∑-–∑–∞ –∏—Å—Ç–æ—â–µ–Ω–∏—è –∑–≤–µ–∑–¥–Ω–æ–π —ç–Ω–µ—Ä–≥–∏–∏.\n\n"
                "–ü–æ–ø–æ–ª–Ω–∏ –∑–∞–ø–∞—Å –∑–≤–µ–∑–¥ –∫–æ–º–∞–Ω–¥–æ–π /buy, —á—Ç–æ–±—ã —è –ø—Ä–æ–¥–æ–ª–∂–∏–ª –æ—Ö—Ä–∞–Ω—è—Ç—å "
                "—Ç–≤–æ—ë –∫–∏–±–µ—Ä–ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–æ –æ—Ç —Ü–∏—Ñ—Ä–æ–≤—ã—Ö –ø–∞—Ä–∞–∑–∏—Ç–æ–≤!\n\n"
                f"–ò–ª–∏ –ø—Ä–∏–≥–ª–∞—Å–∏ –¥—Ä—É–≥–∏—Ö –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤: {ref_link}",
                disable_web_page_preview=True,
            )
        except Exception as e:
            logger.warning(f"Failed to notify admin {admin.user.id}: {e}")
