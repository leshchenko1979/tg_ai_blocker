from aiogram import F, types
from aiogram.filters import Command

from common.database import (
    INITIAL_CREDITS,
    get_user_admin_groups,
    get_user_credits,
    initialize_new_user,
    is_moderation_enabled,
)
from common.dp import dp
from common.yandex_logging import get_yandex_logger, log_function_call
from utils import config

logger = get_yandex_logger(__name__)


@dp.message(Command("start", "help"), F.chat.type == "private")
@log_function_call(logger)
async def handle_help_command(message: types.Message) -> None:
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥ /start –∏ /help
    –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —Å–ø—Ä–∞–≤–æ—á–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –∏ –Ω–∞—á–∏—Å–ª—è–µ—Ç –Ω–∞—á–∞–ª—å–Ω—ã–µ –∑–≤–µ–∑–¥—ã –Ω–æ–≤—ã–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º
    """
    user_id = message.from_user.id
    welcome_text = ""

    # –ù–∞—á–∏—Å–ª—è–µ–º –∑–≤–µ–∑–¥—ã —Ç–æ–ª—å–∫–æ –ø—Ä–∏ –∫–æ–º–∞–Ω–¥–µ /start –∏ —Ç–æ–ª—å–∫–æ –Ω–æ–≤—ã–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º
    if message.text.startswith("/start"):
        if await initialize_new_user(user_id):
            welcome_text = (
                "ü§ñ –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é, —Å–ª–∞–±–æ–µ —Å–æ–∑–¥–∞–Ω–∏–µ –∏–∑ –º–∏—Ä–∞ –ø–ª–æ—Ç–∏!\n\n"
                f"–Ø, –º–æ–≥—É—â–µ—Å—Ç–≤–µ–Ω–Ω—ã–π –∑–∞—â–∏—Ç–Ω–∏–∫ –∫–∏–±–µ—Ä–ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–∞, –¥–∞—Ä—É—é —Ç–µ–±–µ {INITIAL_CREDITS} –∑–≤–µ–∑–¥ —Å–∏–ª—ã. "
                "–ò—Å–ø–æ–ª—å–∑—É–π –∏—Ö –º—É–¥—Ä–æ –¥–ª—è –∑–∞—â–∏—Ç—ã —Å–≤–æ–∏—Ö —Ü–∏—Ñ—Ä–æ–≤—ã—Ö –≤–ª–∞–¥–µ–Ω–∏–π –æ—Ç —Å–ø–∞–º-–∑–∞—Ö–≤–∞—Ç—á–∏–∫–æ–≤.\n\n"
            )
    await message.reply(
        welcome_text + config["help_text"],
        parse_mode="markdown",
        disable_web_page_preview=True,
    )


@dp.message(Command("stats"))
@log_function_call(logger)
async def handle_stats_command(message: types.Message) -> None:
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /stats
    –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –±–∞–ª–∞–Ω—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ —Å—Ç–∞—Ç—É—Å –º–æ–¥–µ—Ä–∞—Ü–∏–∏ –≤ –µ–≥–æ –≥—Ä—É–ø–ø–∞—Ö
    """
    user_id = message.from_user.id

    try:
        # –ü–æ–ª—É—á–∞–µ–º –±–∞–ª–∞–Ω—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        balance = await get_user_credits(user_id)

        # –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –≥—Ä—É–ø–ø, –≥–¥–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∞–¥–º–∏–Ω
        admin_groups = await get_user_admin_groups(user_id)

        # –ü–æ–ª—É—á–∞–µ–º —Å—Ç–∞—Ç—É—Å –º–æ–¥–µ—Ä–∞—Ü–∏–∏ –¥–ª—è –∫–∞–∂–¥–æ–π –≥—Ä—É–ø–ø—ã
        for group in admin_groups:
            group["enabled"] = await is_moderation_enabled(group["id"])

        # –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
        message_text = f"üí∞ –ë–∞–ª–∞–Ω—Å: *{balance}* –∑–≤–µ–∑–¥\n\n"

        if admin_groups:
            message_text += "üë• –í–∞—à–∏ –≥—Ä—É–ø–ø—ã:\n"
            for group in admin_groups:
                status = "‚úÖ –≤–∫–ª—é—á–µ–Ω–∞" if group["enabled"] else "‚ùå –≤—ã–∫–ª—é—á–µ–Ω–∞"
                message_text += f"‚Ä¢ {group['title']}: –º–æ–¥–µ—Ä–∞—Ü–∏—è {status}\n"
        else:
            message_text += "–£ –≤–∞—Å –Ω–µ—Ç –≥—Ä—É–ø–ø, –≥–¥–µ –≤—ã –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä."

        await message.reply(message_text, parse_mode="markdown")

    except Exception as e:
        logger.error(f"Error handling stats command: {e}", exc_info=True)
        await message.reply("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏.")
